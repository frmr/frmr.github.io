One of the most enjoyable parts of the computer science course at Swansea university was a research module that allowed us to study a topic of our choice, with the aim of producing a report and giving a short presentation.
My interest in graphics led me to study ray tracing, and rather than just read about it, I chose to create my own ray tracer in C++. The final product features reflection, multithreading, super-sampled anti-aliasing, sample-based depth of field, HDR rendering and a dithering post-process which takes advantage of the floating-point colour channels to reduce colour banding. It handles ray collisions with spheres and planes, and each shape can have its own colour.
I produced a report detailing the performance characteristics of these features (such as the effect on render time of increasing the number of available cores), using command line switches to control the quality of the output.