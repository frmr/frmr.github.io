This graphics demo was implemented in C++ and OpenGL 2.1.
It demonstrates deferred rendering, in which the world geometry is first rendered without lighting to offscreen buffers. Each light then performs its own calculations on that data and contributes to the final image. The screenshot shows an example with three zones. Each zone has its own light, but lights can affect any zone drawn in the current frame, resulting in smooth colour blending.
It also features a zone/portal occlusion culling system, which reduces rendering time by dividing the map into user-defined zones, with 'portals' placed in doorways and corridors between them. If a portal in the current zone lies in the camera's line of sight, the zones beyond it are drawn recursively. A custom binary format was used to specify the locations of zones and portals, and the relationships between them.